@model SegmentsAndDesignModel

@*If a Custom Design is available*@


@if (Model.DesignData != null && Model.DesignData.Comps != null)
{
    <div id="canvas-container" class="canvas-container" style="background-image: url('@Model.DesignData.BgImageUrl');" data-width="@Model.DesignData.Width" data-height="@Model.DesignData.Height">
        <div id="content">
            @foreach (var comp in Model.DesignData.Comps)
            {
                @Html.Raw(RenderComponent(comp, Model.Segments))
            }
        </div>
        @await Html.PartialAsync("Error")
    </div>

    @if (Model.DesignData?.PageTimeOut > 0)
    {
        <script>
            // Set the timeout and record its state
            var SegmentTimeoutPeriod = @Model.DesignData.PageTimeOut * 1000;
            localStorage.setItem('SegmentTimeoutActive', 'true');

            setTimeout(function () {
                if (localStorage.getItem('SegmentTimeoutActive') === 'true') {
                    window.location.href = '/';
                }
            }, SegmentTimeoutPeriod);
        </script>
    }

}
else
{
    <div class="container-center">
        @foreach (var segment in Model.Segments)
        {
            <button class="btn btn-primary btn-lg segment-btn" onclick="loadServiceView('@segment.Oid')">@segment.Name</button>
        }
        @await Html.PartialAsync("Error")
    </div>
}
@functions {
    public string RenderComponent(DesCompData comp, List<SegmentDto> segments)
    {
        switch (comp)
        {


            case DesCompDataWfButton wfButtonComp:
                return ViewHelper.RenderWfButtonComponent(wfButtonComp);

            case DesCompDataSegment segmentComp:
                return ViewHelper.RenderSegmentComponent(segmentComp, segments);

            case DesCompDataGenericHtml htmlComp:
                return ViewHelper.RenderGenericHtmlComponent(htmlComp);

            case DesCompDataLang langComp:
                return ViewHelper.RenderLanguageButton(langComp, Step.SegmentSelection.ToString());


            default:
                return string.Empty; // Unknown component type
        }
    }

}

<script>
    $(document).ready(function () {
        resizeComponents();
    });
</script>