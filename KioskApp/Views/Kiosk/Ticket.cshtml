@model TicketAndDesPageDataViewModel

@*If a Custom Design is available*@

@if (Model != null && Model.DesPageData != null && Model.DesPageData.Comps != null)
{
    <div id="ticketdiv" class="ticket-container">
        <div id="ticket-body" class="ticket-body" data-width="@Model.DesPageData.Width" data-height="@Model.DesPageData.Height">
            @foreach (var comp in Model.DesPageData.Comps)
            {
                @Html.Raw(RenderComponent(comp, Model.Ticket))
            }
        </div>
    </div>
    <script src="~/js/ticketScaling.js"></script>

    @if (!Model.isMobile)
    {
        <script src="~/js/printTicketDesktop.js"></script>

    }
    else
    {
        <script src="~/js/saveTicketMobile.js"></script>

    }
}


else
{
    <div class="d-flex justify-content-center align-items-center vh-100">
        <div id="ticketdiv" class="card card-dashed shadow-lg" style="width:450px;">
            <div class="card-header text-center">
                <img src="~/media/Qlite-mini.png" alt="Company Logo" class="img-fluid" style="max-height: 40px;">
                <h3 class="card-title mt-3">@ViewHelper.GetLanguage("TicketInfo")</h3>
            </div>
            <div class="card-body">
                <h4 class="text-center font-weight-bold">@Model?.Ticket.ServiceTypeName</h4>
                <p class="text-center font-weight-bold" style="font-size: 40px;">@Model?.Ticket.ServiceCode @Model?.Ticket?.Number</p>
                <div class="text-center mt-4">
                    <span class="font-weight-bold">@DateTime.Now.ToString("dd/MM/yyyy")</span> |
                    <span class="font-weight-bold">@DateTime.Now.ToString("H:mm")</span>
                </div>
            </div>
            <div class="card-footer text-center">
                @ViewHelper.GetLanguage("numberOfWaiting"): @Model?.Ticket.WaitingTickets
            </div>
        </div>
    </div>


}


@functions {
    public string RenderComponent(DesCompData comp, Ticket ticket)
    {
        switch (comp)
        {
            case DesCompDataText textComp:
                return ViewHelper.RenderTicketComponent(textComp, ticket);

            case DesCompDataGenericHtml htmlComp:
                return ViewHelper.RenderGenericHtmlComponent(htmlComp);

            default:
                return string.Empty;
        }
    }


}


