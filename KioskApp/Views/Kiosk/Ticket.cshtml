@model TicketAndDesPageDataViewModel

@*If a Custom Design is available*@

@if (Model != null && Model.DesPageData != null && Model.DesPageData.Comps != null)
{
    <div style="display:flex; justify-content: center; align-items: center;">
        <div id="ticketdiv"
         style="
            width: @(Model.DesPageData.Width ?? "450px");
            height: @(Model.DesPageData.Height ?? "750px"); position: relative;">

            <div id="ticket-body"
             style="
            background-color: @(Model.DesPageData.BackGroundColor ?? "white");
             width: @(Model.DesPageData.Width ?? "450px");
            height: @(Model.DesPageData.Height ?? "750px");
            background-image: url('@(Model.DesPageData.BgImageUrl ?? "")');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            border: 1px solid black;
            ">
                @foreach (var comp in Model.DesPageData.Comps)
                {
                    @Html.Raw(RenderComponent(comp,Model.Ticket))
                }

            </div>
        </div>
    </div>

    <script>
        localStorage.setItem('ServiceTimeoutActive', 'false');
    </script>

    @if (!Model.isMobile)
    {

        <script>


            // Wait for the DOM to be fully loaded
            $(document).ready(function () {
                var body = document.getElementById("ticket-body");

                //Apply the transition style to the ticket-body
                body.style.transition = "transform 2s ease-in-out";

                // Animate the ticket-body sliding up
                body.style.transform = "translateY(+" + 1500 + "px)";

                // After 2 seconds, redirect to the index page
                setTimeout(function () {
                    window.location.href = '/';
                }, 2000);

                var html = $("#ticketdiv").html();

                PrintTicket(html);



            });

         

        </script>


    }
    else
    {
        <script>
          
              html2canvas(document.querySelector("#ticketdiv")).then(canvas => {

                var imgData = canvas.toDataURL();

                // Create a link and set the URL as the href
                var link = document.createElement('a');
                link.href = imgData;
                link.download = 'TicketImage.png'; // Set the download name

                // Append the link to the body, click it, and remove it
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);


            });
        </script>
    }
}
else
{
    <div style="display: flex; justify-content: center; align-items: center;">

        <div id="ticketdiv" style="width:450px;height:750px;">
            <div id="ticket-body" class="card card-dashed" style="font-size: 2rem; box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);">
                <div class="card-header">
                    <div class="d-flex justify-content-center align-items-center mb-3">
                        <img src="~/media/Qlite-mini.png" class="img-fluid" style="max-height: 40px; object-fit: contain;">
                    </div>
                    <h3 class="card-title"> @ViewHelper.GetLanguage("TicketInfo")</h3>

                </div>
                <div class="card-body">
                    <div class="font-weight-bold text-center mb-3">@Model?.Ticket.ServiceTypeName</div>
                    <div class="font-weight-bold text-center mb-3" style="font-size: 40px;"><b>@Model?.Ticket.ServiceCode @Model?.Ticket?.Number</b></div>
                    <div class="mb-3">
                        <table class="w-100">
                            <tr class="font-weight-bold">
                                <td class="text-left pl-2">@DateTime.Now.ToString("dd/MM/yyyy")</td>
                                <td class="text-right pr-2">@DateTime.Now.ToString("H:mm")</td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="font-weight-bold text-center mb-3">
                        @ViewHelper.GetLanguage("numberOfWaiting") :@Model?.Ticket.WaitingTickets
                    </div>
                </div>
            </div>
        </div>
    </div>

}


@functions {
    public string RenderComponent(DesCompData comp, Ticket ticket)
    {
        switch (comp)
        {
            case DesCompDataText textComp:
                return ViewHelper.RenderTicketComponent(textComp, ticket);

            case DesCompDataGenericHtml htmlComp:
                return ViewHelper.RenderGenericHtmlComponent(htmlComp);

            default:
                return string.Empty;
        }
    }


}




