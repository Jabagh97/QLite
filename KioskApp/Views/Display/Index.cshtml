@using KioskApp.Helpers;
@using QLite.Data.Dtos;
@using QLite.Data;
@using QLite.DesignComponents;
@inject IConfiguration Configuration

@model DisplayAndDesignModel

@*If a Custom Design is available*@

@if (Model != null && Model.DesPageData != null && Model.DesPageData.Comps != null)
{

    <div id="canvas-container" class="canvas-container" style="background-image: url('@(Model.DesPageData.BgImageUrl ?? "")');" data-width="@Model.DesPageData.Width" data-height="@Model.DesPageData.Height">
        <div id="content">
            @foreach (var comp in Model.DesPageData.Comps)
            {
                @Html.Raw(RenderComponent(comp))
            }

            @await Html.PartialAsync("DynamicContent")

        </div>



        @*Errors*@

        @await Html.PartialAsync("Error")


    </div>

}
@functions {
    public string RenderComponent(DesCompData comp)
    {
        switch (comp)
        {

            case DesCompDataGenericHtml htmlComp:
                return ViewHelper.RenderGenericHtmlComponent(htmlComp);


   

            default:
                return string.Empty; // Unknown component type
        }
    }
}


<script>
    $(document).ready(function () {
        resizeComponents();
    });
</script>