@model Type


@{
    var properties = Model.GetProperties();
    var columnDefinitions = properties
        .Select(property => new
        {
            data = property.Name,
            name = property.Name,
            title = Html.DisplayName(property.Name).ToString()
        })
        .ToList();
}


<div id="kt_app_content" class="app-content  flex-column-fluid">
    <div id="kt_app_content_container" class="app-container  container-fluid">
        <!--begin::Wrapper-->
        <div class="d-flex flex-stack mb-5">
           
        </div>
        <!--end::Wrapper-->
        <!--begin::Datatable-->
        <table id="table" class="table align-middle table-row-dashed fs-6 gy-5">
            <thead>
                <tr class="text-start text-gray-500 fw-bold fs-7 text-uppercase gs-0">

                    @foreach (var column in columnDefinitions)
                    {
                        <th>
                            @column.title
                        </th>
                    }
                </tr>
            </thead>
            <tbody class="text-gray-600 fw-semibold">
            </tbody>
        </table>
        <!--end::Datatable-->

    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            "use strict";

            var columnDefinitions = [
        @foreach (var column in columnDefinitions)
        {
            <text>{ "data": "@column.data", "name": "@column.name", "title": "@column.title", "searchable": true }, </text>
        }
                    ];

            // Class definition
            var KTDatatablesServerSide = function () {
                // Shared variables
                var table;
                var dt;
               

                // Private functions
                var initializeDatatable = function () {
                    dt = $('#table').DataTable({
                        searchDelay: 500,
                        serverSide: true,
                        processing: true,
                        stateSave: true,
                        paging: true,
                        filter: true,
                        dom: 'Bfrtip',
                        select: true,
                        ajax: {
                            url: '@Url.Action("GetData", "GenericTable")',
                            type: "POST",
                            data: { "modelName": '@Model.Name.Replace("ViewModel", "")' },
                            dataType: "json",
                            error: function (xhr, error, code) {
                                console.log(xhr, code);
                            }
                        },
                        columns: columnDefinitions,
                        buttons: [
                            initializeBaseModalButton('@Model.Name.Replace("ViewModel", "")', "Add"),
                            initializeBaseModalButton("GenericTable", "Edit"),
                            initializeBaseModalButton("GenericTable", "Delete"),
                            // Include export buttons here
                            ...addButtons("csv", "copy", "excel", "pdf", "print")
                        ]
                    });

                    table = dt.$;
                }

                // Public methods
                return {
                    init: function () {
                        initializeDatatable();
                    }
                }
            }();

            // On document ready
            KTUtil.onDOMContentLoaded(function () {
                KTDatatablesServerSide.init();
            });
        });
    </script>

    <script src="~/js/TableMethods.js"></script>
}


@await Html.PartialAsync("modals/AddModal")
@await Html.PartialAsync("modals/EditModal")
