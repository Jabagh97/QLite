@model Type

@{
    var modelProperties = Model.GetProperties();
    var viewModelType = ViewBag.ViewModel as Type;
    var viewModelProperties = viewModelType?.GetProperties();
    var filteredProperties = modelProperties.Where(vp => viewModelProperties.Any(mp => mp.Name == vp.Name));
    var action = ViewBag.Action;
    var dropDowns = ViewBag.DropDowns;
}

<form asp-controller="Generic" asp-action="@action" method="post" id="createForm">
    @foreach (var property in filteredProperties)
    {
        List<dynamic>? dropDownData = null;
        var propertyName = property.Name;

        <div class="form-group">
            <label class="control-label">@property.Name</label> <span style="color:red;">*</span>

            @if (dropDowns != null && dropDowns.TryGetValue(propertyName, out dropDownData))
            {
                var selectList = new SelectList(dropDownData);

                <select asp-for="@propertyName" asp-items="@selectList" class="form-control">
                    <option value="">Select...</option>
                    
                </select>
            }
            else
            {
                // Render regular input fields for other property types
                if (property.PropertyType == typeof(string))
                {
                    <input asp-for="@propertyName" class="form-control" />
                }
                else if (property.PropertyType == typeof(int))
                {
                    <input asp-for="@propertyName" class="form-control" type="number" />
                }
                <!-- Add more conditions for other property types as needed -->
            }
        </div>
    }

    <button type="button" id="createButton" class="btn btn-primary">Create</button>
</form>

@section Scripts {
    <script>
        // When the "Create" button is clicked, send an AJAX request
        document.getElementById("createButton").addEventListener("click", function () {
            // Serialize the form data
            var formData = new FormData(document.getElementById("createForm"));

            // Perform an AJAX request using formData
            // ...

            // Example: You can use fetch API to send the form data
            fetch('/Generic/Create', {
                method: 'POST',
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    // Handle the response as needed
                    console.log(data);
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        });
    </script>
}
