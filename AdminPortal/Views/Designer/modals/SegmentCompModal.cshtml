<div class="modal fade" id="segmentModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="segmentModalLabel">Edit Segment Button</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="segmentPropertiesForm">
                    <div class="mb-3">
                        <label for="buttonText" class="form-label">Button Text</label>
                        <input type="text" class="form-control" id="buttonText" placeholder="Enter button text">
                    </div>
                    <div class="mb-3">
                        <label for="segmentID" class="form-label">Segment ID</label>
                        <select class="form-select" id="segmentID">
                            <option value="'00000000-0000-0000-0000-000000000000'">Select Segment</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="cssCustom" class="form-label">Custom CSS</label>
                        <textarea class="form-control" id="cssCustom" style="min-height: 150px; resize: vertical;" placeholder="Enter your custom CSS properties"></textarea>
                    </div>
                    <div class="mb-3 form-check">
                        <input type="checkbox" class="form-check-input" id="localized">
                        <label class="form-check-label" for="localized">Localized</label>
                    </div>
                    <div class="mb-3 form-check">
                        <input type="checkbox" class="form-check-input" id="bounce">
                        <label class="form-check-label" for="bounce">Bounce</label>
                    </div>
                    <div class="mb-3">
                        <label for="compID" class="form-label">Component ID</label>
                        <input type="text" class="form-control" id="compID" disabled>
                    </div>


                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="deleteButton">Delete</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveSegmentProperties()">Save changes</button>
            </div>
        </div>
    </div>
</div>


<script src="~/JQuery/jquery-3.7.1.js"></script>

<script>

    // Function to populate segment options
    function populateSegmentOptions() {
        $.ajax({
            url: 'Designer/GetSegmentList',
            method: 'GET',
            success: function (response) {
                // Clear existing options
                $('#segmentID').empty();
                // Append new options
                $.each(response, function (index, segment) {
                    $('#segmentID').append($('<option>', {
                        value: segment.oid,
                        text: segment.name
                    }));
                });
            },
            error: function (xhr, status, error) {
                console.error('Error fetching segment list:', error);
            }
        });
    }


    // Call the function to populate segment options when the page loads
    $(document).ready(function () {
        populateSegmentOptions();
    });

    function saveSegmentProperties() {
        // Retrieve values from the form
        var buttonText = document.getElementById('buttonText').value;
        var segmentID = document.getElementById('segmentID').value;
        var localized = document.getElementById('localized').checked;
        var bounce = document.getElementById('bounce').checked;
        var cssCustom = document.getElementById('cssCustom').value; 
        var compId = document.getElementById('compID').value;
        var compIndex = desPageData.Comps.findIndex(comp => comp.Id === compId);

        if (compIndex !== -1) {
            // Update desPageData list
            var comp = desPageData.Comps[compIndex];
            if (!comp.ButtonText) comp.ButtonText = buttonText;
            if (!comp.SegmentID) comp.SegmentID = segmentID;

            if (!comp.Localized) comp.Localized = localized;
            if (!comp.Bounce) comp.Bounce = bounce;
            if (!comp.CustomCss) comp.CustomCss = cssCustom;

            // Apply changes to the HTML element
            var compElement = document.getElementById(compId);
            if (compElement) {
                // Split the custom CSS into individual rules
                var cssRules = cssCustom.split(';');
                cssRules.forEach(rule => {
                    if (rule.trim() !== '') {
                        var [property, value] = rule.split(':').map(item => item.trim());
                        compElement.style[property] = value;
                    }
                });
            }
        }
        $('#segmentModal').modal('hide');
    }



</script>