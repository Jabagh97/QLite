@using QLite.Data.Models.Auth;
@model ApplicationUser


<div id="kt_app_content" class="app-content flex-column-fluid">
    <div id="kt_app_content_container" class="app-container container-fluid">
        <!--begin::Wrapper-->
        <div class="d-flex flex-stack mb-5">
            <!-- Your wrapper content goes here if needed -->
        </div>
        <!--end::Wrapper-->
        <!--begin::Datatable-->

        <div id="Wrapper">
            <table id="userTable" class="table table-hover table-rounded border gy-7 gs-7" style="box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);">
                <thead>
                    <tr class="fw-semibold fs-7 text-primary border-bottom border-gray-200 py-4">

                        <th>Username</th>
                        <th>Email</th>
                        <th>Account Type</th>
                        <th>Actions</th>
                    </tr>
                </thead>
            </table>
        </div>
        <!--end::Datatable-->
    </div>
</div>

<div>
</div>


<!-- Modal for creating users -->
<!-- Modal for creating users -->
<div id="createUserModal" class="modal" tabindex="-1" role="dialog">
    <!-- Modal content -->
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create User</h5>
                <!--begin::Close-->
                <div class="btn btn-icon btn-sm btn-active-light-primary ms-2" data-bs-dismiss="modal" aria-label="Close">
                    <i class="ki-duotone ki-cross fs-2x"><span class="path1"></span><span class="path2"></span></i>
                </div>
                <!--end::Close-->
            </div>
            <div class="modal-body">
                <!-- User creation form -->
                <form id="createUserForm">
                    <div class="form-group">
                        <label asp-for="UserName">Username</label><span style="color:red;">*</span>
                        <input asp-for="UserName" class="form-control" required />
                        <span asp-validation-for="UserName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Email">Email</label><span style="color:red;">*</span>
                        <input asp-for="Email" class="form-control" required />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="PasswordHash">Password</label><span style="color:red;">*</span>
                        <input asp-for="PasswordHash" class="form-control" id="PasswordHash" required />
                        <small class="form-text text-muted">
                            Password must be at least 8 characters long and include uppercase and lowercase letters, a number, and a special character.
                        </small>
                        <span asp-validation-for="PasswordHash" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="AccountType">Account Type</label><span style="color:red;">*</span>
                        <select asp-for="AccountType" class="form-control" id="accountType" required>
                            <option value="">Select Type</option>

                            <option value="0">DeskApp</option>
                            <option value="1">AdminPortal</option>
                        </select>
                    </div>
                    <!-- Dropdown for selecting desks (hidden by default) -->
                    <div id="deskDropdown" class="form-group" style="display: none;">
                        <label asp-for="Desk">Select Desk</label><span style="color:red;">*</span>
                        <select asp-for="Desk" class="form-control" id="desk">
                            <!-- Options will be populated dynamically -->
                        </select>
                    </div>
                    <div class="form-check">
                        <input asp-for="IsActive" class="form-check-input" id="IsActive" checked />
                        <label asp-for="IsActive" class="form-check-label">Active</label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><i class="fas fa-times"></i> Close</button>
                <button type="button" id="submitCreateUser" class="btn btn-primary">Create</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal for editing users -->
<div id="editUserModal" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit User</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- User editing form -->
                <form id="editUserForm">
                    <input type="hidden" id="editUserId" name="Id">
                    <div class="form-group">
                        <label for="editUsername">Username</label>
                        <input type="text" class="form-control" id="editUsername" name="UserName" required>
                    </div>
                    <div class="form-group">
                        <label for="editEmail">Email</label>
                        <input type="email" class="form-control" id="editEmail" name="Email" required>
                    </div>
                    <div class="form-group">
                        <label for="editAccountType">Account Type</label>
                        <select class="form-control" id="editAccountType" name="AccountType" required>
                            <option value="0">DeskApp</option>
                            <option value="1">AdminPortal</option>
                        </select>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="editIsActive" name="IsActive">
                        <label class="form-check-label" for="editIsActive">Active</label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" id="submitEditUser" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {


    <script>
        $(document).ready(function () {
            $('#accountType').change(function () {
                var selectedAccountType = $(this).val();
                if (selectedAccountType === '0') { // DeskApp selected
                    $('#deskDropdown').show(); // Show the desk dropdown
                    // Fetch desks dynamically and populate the dropdown
                    $.get('User/GetAllDesks', function (data) {
                        var options = '';
                        data.forEach(function (desk) {
                            options += '<option value="' + desk.oid + '">' + desk.name + '</option>';
                        });
                        $('#desk').html(options);
                    });
                } else {
                    $('#deskDropdown').hide(); // Hide the desk dropdown
                }
            });


            // Initialize DataTable
            $('#userTable').DataTable({
                processing: true,
                // serverSide: true,
                paging: true,
                filter: true,
                dom: 'Bfrtilp',
                select: true,
                ajax: {
                    "url": "User/GetUsers",
                    "type": "GET"
                },
                columns: [

                    { "data": "userName" },
                    { "data": "email" },
                    {
                        "data": "accountType",
                        "render": function (data, type, full, meta) {
                            // Check the value of accountType and return the corresponding text
                            return data === 1 ? "Admin" : "Desk";
                        }
                    },
                    {
                        "render": function (data, type, full, meta) {
                            return '<button class="btn btn-danger delete-btn" data-id="' + full.id + '">Delete</button>';

                        }
                    }
                ],
                lengthMenu: [
                    [5, 10, 25, 50, 1000],
                    ['5 rows', '10 rows', '25 rows', '50 rows', 'Show all']
                ],
                pageLength: 10,
                buttons: [
                    {
                        text: 'Create User',
                        action: function (e, dt, node, config) {
                            $('#createUserModal').modal('show');
                        },
                        className: 'btn-primary'
                    }
                ]


            });

            // Handle edit and delete actions
            $('#userTable').on('click', '.edit-btn', function () {
                var userId = $(this).data('id');
                // Implement your edit logic here
                $('#editUserModal').modal('show');
            });
            $('#userTable').on('click', '.delete-btn', function () {
                var userId = $(this).data('id');
                if (confirm('Are you sure you want to delete this user?')) {
                    $.ajax({
                        url: '@Url.Action("DeleteUser", "User")',
                        type: 'POST',
                        data: { id: userId },
                        success: function (data) {
                            // Refresh user list or perform any other actions after user deletion
                            $('#userTable').DataTable().ajax.reload(); // Reload DataTable
                        },
                        error: function (error) {
                            alert('Error deleting user: ' + error.responseText);
                        }
                    });
                }
            });

            // Show modal when create user button is clicked
            $('#createUserBtn').click(function () {
                $('#createUserModal').modal('show');
            });

            $('#submitCreateUser').click(function () {
                var userData = {
                    UserName: $('#UserName').val(),
                    Email: $('#Email').val(),
                    PasswordHash: $('#PasswordHash').val(),
                    AccountType: $('#AccountType').val(),
                    Desk: $('#desk').val(),
                    IsActive: $('#IsActive').is(':checked').toString()
                };

                // Send the data to the server
                $.ajax({
                    url: '@Url.Action("CreateUser", "User")',
                    type: 'POST',
                    data: userData,
                    success: function (data) {
                        // Refresh user list or perform any other actions after user creation
                        $('#createUserModal').modal('hide'); // Close modal
                        $('#userTable').DataTable().ajax.reload(); // Reload DataTable
                    },
                    error: function (xhr) {
                        var response = JSON.parse(xhr.responseText);
                        var errorsHtml = "<ul>";
                        if (response && response.errors) {
                            // Construct an HTML list of error messages
                            response.errors.forEach(function (error) {
                                errorsHtml += "<li>" + error + "</li>";
                            });
                        } else {
                            // Default message if no specific errors were provided
                            errorsHtml += "<li>Error creating user. Please try again.</li>";
                        }
                        errorsHtml += "</ul>";

                        Swal.fire({
                            icon: 'error',
                            title: 'Oops... Something went wrong!',
                            html: "We encountered the following issues:<br>" + errorsHtml,
                            confirmButtonText: 'Ok, I\'ll check'
                        });
                    }

                });
            });




            // Handle edit user form submission
            $('#submitEditUser').click(function () {
                var userId = $('#editUserId').val();
                var userData = $('#editUserForm').serializeArray();
                $.ajax({
                    url: '@Url.Action("UpdateUser", "User")' + '/' + userId,
                    type: 'PUT',
                    data: userData,
                    success: function (data) {
                        // Refresh user list or perform any other actions after user update
                        $('#editUserModal').modal('hide'); // Close modal
                        $('#userTable').DataTable().ajax.reload(); // Reload DataTable
                    },
                    error: function (error) {
                        alert('Error updating user: ' + error.responseText);
                    }
                });
            });
        });
    </script>
}

